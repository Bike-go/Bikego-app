name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run_pull:
    name: Run Pull and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checking out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the short SHA hash of the commit
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
  
      - name: Build and push Docker image
        run: |
          docker build -t selecro/bikego-main:${{ github.ref_name }}-${{ env.SHORT_SHA }} .
          docker push selecro/bikego-main:${{ github.ref_name }}-${{ env.SHORT_SHA }}
  
      - name: Install OpenVPN
        run: |
          sudo apt-get update && sudo apt-get install openvpn -y

      - name: Configure OpenVPN
        run: |
          echo "${{ secrets.OPENVPN_CONFIG }}" > ~/openvpn-config.ovpn
          echo "${{ secrets.OPENVPN_PASSWORD }}" > ~/openvpn.txt
    
      - name: Connect to OpenVPN
        run: |
          sudo nohup openvpn --config ~/openvpn-config.ovpn --auth-nocache --askpass ~/openvpn.txt > /dev/null 2>&1 &
    
      - name: Wait for VPN Connection
        run: |
          while ! pgrep -x "openvpn" > /dev/null; do sleep 1; done

      - name: SSH into Your Server and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login || true && \
            docker pull selecro/bikego-main:${{ github.ref_name }}-${{ env.SHORT_SHA }} && \
            docker ps -a | grep bikego-main && docker stop bikego-main || true && \
            docker ps -a | grep bikego-main && docker rm bikego-main || true && \
            docker run \
            -e HOST="${{ secrets.HOST }}" \
            -e PORT="${{ secrets.PORT }}" \
            -e FLASK_ENV="${{ secrets.FLASK_ENV }}" \
            -e DB_USER="${{ secrets.DB_USER }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e DB_HOST="${{ secrets.DB_HOST }}" \
            -e DB_PORT="${{ secrets.DB_PORT }}" \
            -e DB_NAME="${{ secrets.DB_NAME }}" \
            -e DB_SCHEMA_NAME="${{ secrets.DB_SCHEMA_NAME }}" \
            -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            -e IMGUR_CLIENT_ID="${{ secrets.IMGUR_CLIENT_ID }}" \
            -e SENDER_EMAIL="${{ secrets.SENDER_EMAIL }}" \
            -e SENDER_PASSWORD="${{ secrets.SENDER_PASSWORD }}" \
            --name bikego-main -d -p ${{ env.PORT }}:${{ env.PORT }} \
            selecro/bikego-main:${{ github.ref_name }}-${{ env.SHORT_SHA }} && \
            docker update --restart unless-stopped bikego-main && exit

      - name: Close OpenVPN Connection
        run: |
          sudo pkill openvpn
    
      - name: Clean up SSH Configuration
        run: |
          rm -rf ~/.ssh
