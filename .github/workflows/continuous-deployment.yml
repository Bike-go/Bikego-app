name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          docker build -t selecro/bikego-main:${{ github.ref_name }}-${SHORT_SHA} -t selecro/bikego-main:latest .
          docker push selecro/bikego-main:${{ github.ref_name }}-${SHORT_SHA}
          docker push selecro/bikego-main:latest
      
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install openvpn -y
      
      - name: Save OpenVPN Configuration
        run: |
          echo "${{ secrets.OPENVPN_CONFIG }}" > ~/openvpn-config.ovpn

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: ~/openvpn-config.ovpn
          password: ${{ secrets.OPENVPN_PASSWORD }}

      - name: Check Connection Status
        run: |
          if ! pgrep -x "openvpn"; then
            echo "OpenVPN connection failed after multiple attempts."
            exit 1  # Fail the job if connection failed
          fi

      - name: Verify Server Accessibility
        run: |
          echo "Pinging the server to verify network connectivity..."
          ping -c 4 ${{ secrets.SERVER_IP }}  # Ping the server to check connectivity
      
      - name: Deploy Files via SFTP
        uses: Dylan700/sftp-upload-action@v1.2.3
        with:
          server: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          uploads: ./ => bikego

      - name: Deploy and Start Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            > ~/bikego/.env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ~/bikego/.env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ~/bikego/.env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> ~/bikego/.env
            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> ~/bikego/.env
            echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> ~/bikego/.env
            echo "POSTGRES_SCHEMA=${{ secrets.POSTGRES_SCHEMA }}" >> ~/bikego/.env
            echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> ~/bikego/.env
            echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> ~/bikego/.env
            echo "FLASK_APP=${{ secrets.FLASK_APP }}" >> ~/bikego/.env
            echo "FLASK_ENV=${{ secrets.FLASK_ENV }}" >> ~/bikego/.env
            echo "FLASK_HOST=${{ secrets.FLASK_HOST }}" >> ~/bikego/.env
            echo "FLASK_PORT=${{ secrets.FLASK_PORT }}" >> ~/bikego/.env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ~/bikego/.env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> ~/bikego/.env
            echo "IMGUR_CLIENT_ID=${{ secrets.IMGUR_CLIENT_ID }}" >> ~/bikego/.env
            echo "IMGUR_CLIENT_SECRET=${{ secrets.IMGUR_CLIENT_SECRET }}" >> ~/bikego/.env
            echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}" >> ~/bikego/.env
            echo "SENDER_PASSWORD=${{ secrets.SENDER_PASSWORD }}" >> ~/bikego/.env
            echo "URL_IN_EMAIL=${{ secrets.URL_IN_EMAIL }}" >> ~/bikego/.env
            cd ~/bikego
            docker-compose down
            docker-compose up -d --build

      - name: Clean Up Temporary Files
        run: |
          rm -rf ~/openvpn-config.ovpn ~/.ssh
