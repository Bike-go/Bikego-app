name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run_pull:
    name: Run Pull and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checking out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the short SHA hash of the commit
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          docker build -t bikego/bikego-${{ github.ref_name }}:$SHORT_SHA .

      - name: Push Docker Image
        run: |
          docker push bikego/bikego-${{ github.ref_name }}:$SHORT_SHA 

      - name: Install OpenVPN
        run: |
          sudo apt-get update && sudo apt-get install openvpn -y

      - name: Configure OpenVPN
        run: |
          echo "${{ secrets.OPENVPN_CONFIG }}" > ~/openvpn-config.ovpn
          echo "${{ secrets.OPENVPN_PASSWORD }}" > ~/openvpn.txt
    
      - name: Connect to OpenVPN
        run: |
          for i in {1..10}; do
            if pgrep -x "openvpn" > /dev/null; then break; fi
            echo "Waiting for VPN connection..." && sleep 3
          done

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      - name: Copy files to server
        run: |
          scp -r ./* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/bikego

      - name: Create .env file on server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ~/bikego/.env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ~/bikego/.env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> ~/bikego/.env
            echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> ~/bikego/.env
            echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> ~/bikego/.env
            echo "FLASK_APP=${{ secrets.FLASK_APP }}" >> ~/bikego/.env
            echo "FLASK_ENV=${{ secrets.FLASK_ENV }}" >> ~/bikego/.env
            echo "FLASK_HOST=${{ secrets.FLASK_HOST }}" >> ~/bikego/.env
            echo "FLASK_PORT=${{ secrets.FLASK_PORT }}" >> ~/bikego/.env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ~/bikego/.env
            echo "IMGUR_CLIENT_ID=${{ secrets.IMGUR_CLIENT_ID }}" >> ~/bikego/.env
            echo "IMGUR_CLIENT_SECRET=${{ secrets.IMGUR_CLIENT_SECRET }}" >> ~/bikego/.env
            echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}" >> ~/bikego/.env
            echo "SENDER_PASSWORD=${{ secrets.SENDER_PASSWORD }}" >> ~/bikego/.env
          EOF
  
      - name: SSH into server and deploy
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd ~/bikego
            docker-compose down
            docker-compose up -d --build
          EOF

      - name: Terminate OpenVPN Connection
        run: sudo pkill -f openvpn || true

      - name: Remove Temporary Files
        run: rm -rf ~/openvpn-config.ovpn ~/vpn-auth.txt ~/.ssh